<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>弹性盒子</title>
      <link href="/2022/10/10/flex%E5%B8%83%E5%B1%80/"/>
      <url>/2022/10/10/flex%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>弹性盒子</span><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg>概念</h2><p>盒子，是一个容器。里面放对应的文本和图片。<u>弹性盒子，就是flex布局，flex主要就是修改了子元素排序方式问题</u>，默认父元素里面的的子元素都是块级元素，块级元素都是竖着排列的。触发父元素的弹性盒子属性，就改变了子元素的排列方式，横向排列</p><h2 id="如何触发弹性盒子"><a href="#如何触发弹性盒子" class="headerlink" title="如何触发弹性盒子"></a>如何触发弹性盒子</h2><p>给父元素添加<code>display:flex</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：触发了父元素的display属性之后，排列方式和浮动非常相似，但不是浮动</p><h2 id="特点"><a href="#特点" class="headerlink" title=" 特点"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 特点</h2><p>触发之后有什么特点呢</p><ol><li>会让子元素水平排列</li><li>会让子元素成为块级元素</li><li>如果弹性盒子之后，子元素只有一个，给子元素添加<code>margin:auto</code> 实现自动水平居中</li></ol><h2 id="基础概念"><a href="#基础概念" class="headerlink" title=" 基础概念"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 基础概念</h2><ul><li>容器：父元素</li><li>项目：子元素</li><li>横轴：x轴 水平排列</li><li>纵轴：y轴 垂直排列</li><li>主轴：触发弹性盒子之后，默认是x轴排列</li><li>侧轴：与主轴对应，是y轴排列</li></ul><h2 id="弹性盒子的属性有哪些-常用属性"><a href="#弹性盒子的属性有哪些-常用属性" class="headerlink" title=" 弹性盒子的属性有哪些(常用属性)"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 弹性盒子的属性有哪些(常用属性)</h2><h3 id="修改子元素的排列方式，给父元素添加flex-direction属性"><a href="#修改子元素的排列方式，给父元素添加flex-direction属性" class="headerlink" title=" 修改子元素的排列方式，给父元素添加flex-direction属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 修改子元素的排列方式，给父元素添加<code>flex-direction</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* flex-direction属性值</span></span><br><span class="line"><span class="comment">        1) row: 默认值，表示沿水平方向，由左到右。</span></span><br><span class="line"><span class="comment">        2) row-reverse ：表示沿水平方向，由右到左</span></span><br><span class="line"><span class="comment">        3) column：表示垂直方向，由上到下</span></span><br><span class="line"><span class="comment">        4) column-reverse:表示垂直方向，由下到上</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">flex-direction</span>:column;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整主轴上的对其方式-给父元素添加justify-content属性"><a href="#调整主轴上的对其方式-给父元素添加justify-content属性" class="headerlink" title=" 调整主轴上的对其方式 给父元素添加justify-content属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整主轴上的对其方式 给父元素添加<code>justify-content</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* justify-content</span></span><br><span class="line"><span class="comment">        1) flex-start：默认值，左对齐</span></span><br><span class="line"><span class="comment">        2) flex-end：右对齐</span></span><br><span class="line"><span class="comment">        3) center：居中对齐</span></span><br><span class="line"><span class="comment">        4) space-between：两端对齐</span></span><br><span class="line"><span class="comment">        5) space-around：每个项目两侧的间距相等</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整侧轴上的对其方式-给父元素添加align-items属性"><a href="#调整侧轴上的对其方式-给父元素添加align-items属性" class="headerlink" title=" 调整侧轴上的对其方式 给父元素添加align-items属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整侧轴上的对其方式 给父元素添加<code>align-items</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* align-items</span></span><br><span class="line"><span class="comment">        1) flex-start:交叉轴的起点对齐</span></span><br><span class="line"><span class="comment">        2) flex-end 交叉轴的终点对齐</span></span><br><span class="line"><span class="comment">        3) center 交叉轴居中对齐</span></span><br><span class="line"><span class="comment">        4) baseline 项目的第一行文字的基线对齐 没有高度的话 则高度占所有高度</span></span><br><span class="line"><span class="comment">        5) stretch：默认值：和flex-start效果一致 实际开发中不用</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">align-items</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="折行属性-flex-wrap"><a href="#折行属性-flex-wrap" class="headerlink" title=" 折行属性 flex-wrap"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 折行属性 <code>flex-wrap</code></h3><p>默认触发弹性盒子之后,子元素过多,子元素永远美元折行,会产生挤压效果,把原有的宽度挤没了,折行之后,会产生行间距问题,默认是均分</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* flex-wrap:</span></span><br><span class="line"><span class="comment">        1) nowrap：表示不换行</span></span><br><span class="line"><span class="comment">        2) wrap：正常换行</span></span><br><span class="line"><span class="comment">        3) wrap-reverse：向上换行，第一行位于下方</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">flex-wrap</span>:nowrap;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整行间距-给父元素添加align-content属性"><a href="#调整行间距-给父元素添加align-content属性" class="headerlink" title=" 调整行间距 给父元素添加align-content属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整行间距 给父元素添加<code>align-content</code>属性</h3><emp>只有折行之后才会产生这个效果</emp><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:nowrap;</span><br><span class="line">    <span class="comment">/* align-content</span></span><br><span class="line"><span class="comment">        1) flex-start 侧周的开始位置(都没有行间距了)(*)</span></span><br><span class="line"><span class="comment">        2) flex-end 侧周的结束位置(都没有行间距了)</span></span><br><span class="line"><span class="comment">        3) center 侧周的居中位置</span></span><br><span class="line"><span class="comment">        4) space-between 侧周两端对其(贴边显示)</span></span><br><span class="line"><span class="comment">        5) space-around 侧周两端环绕(行与行之间的间距是贴边行到父元素之间的2倍) </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">align-content</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在开发中-我们还有两项会用的属性-开发属性"><a href="#在开发中-我们还有两项会用的属性-开发属性" class="headerlink" title=" 在开发中,我们还有两项会用的属性(开发属性)"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 在开发中,我们还有两项会用的属性(开发属性)</h2><h2 id="总结"><a href="#总结" class="headerlink" title=" 总结"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 总结</h2><ul><li>优点在于其容易上手，根据flex规则很容易达到某个布局效果。</li><li>弹性布局在网页中实现快速分配比例，盒子快速对齐优势很大，因为通过简单的几个属性就可以实现，进而减少我们设置具体值。但是弹性布局中的属性对于浏览器版本要求比较严格，如果浏览器版本太低那么弹性布局中的属性是无法正常使用的。</li><li>缺点是浏览器兼容性比较差，只能兼容到ie9及以上。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
