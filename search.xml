<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>弹性盒子</title>
      <link href="/2022/10/10/flex%E5%B8%83%E5%B1%80/"/>
      <url>/2022/10/10/flex%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>弹性盒子</span><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg>概念</h2><p>盒子，是一个容器。里面放对应的文本和图片。<u>弹性盒子，就是flex布局，flex主要就是修改了子元素排序方式问题</u>，默认父元素里面的的子元素都是块级元素，块级元素都是竖着排列的。触发父元素的弹性盒子属性，就改变了子元素的排列方式，横向排列</p><h2 id="如何触发弹性盒子"><a href="#如何触发弹性盒子" class="headerlink" title="如何触发弹性盒子"></a>如何触发弹性盒子</h2><p>给父元素添加<code>display:flex</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：触发了父元素的display属性之后，排列方式和浮动非常相似，但不是浮动</p><h2 id="特点"><a href="#特点" class="headerlink" title=" 特点"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 特点</h2><p>触发之后有什么特点呢</p><ol><li>会让子元素水平排列</li><li>会让子元素成为块级元素</li><li>如果弹性盒子之后，子元素只有一个，给子元素添加<code>margin:auto</code> 实现自动水平居中</li></ol><h2 id="基础概念"><a href="#基础概念" class="headerlink" title=" 基础概念"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 基础概念</h2><ul><li>容器：父元素</li><li>项目：子元素</li><li>横轴：x轴 水平排列</li><li>纵轴：y轴 垂直排列</li><li>主轴：触发弹性盒子之后，默认是x轴排列</li><li>侧轴：与主轴对应，是y轴排列</li></ul><h2 id="弹性盒子的属性有哪些-常用属性"><a href="#弹性盒子的属性有哪些-常用属性" class="headerlink" title=" 弹性盒子的属性有哪些(常用属性)"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 弹性盒子的属性有哪些(常用属性)</h2><h3 id="修改子元素的排列方式，给父元素添加flex-direction属性"><a href="#修改子元素的排列方式，给父元素添加flex-direction属性" class="headerlink" title=" 修改子元素的排列方式，给父元素添加flex-direction属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 修改子元素的排列方式，给父元素添加<code>flex-direction</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* flex-direction属性值</span></span><br><span class="line"><span class="comment">        1) row: 默认值，表示沿水平方向，由左到右。</span></span><br><span class="line"><span class="comment">        2) row-reverse ：表示沿水平方向，由右到左</span></span><br><span class="line"><span class="comment">        3) column：表示垂直方向，由上到下</span></span><br><span class="line"><span class="comment">        4) column-reverse:表示垂直方向，由下到上</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">flex-direction</span>:column;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整主轴上的对其方式-给父元素添加justify-content属性"><a href="#调整主轴上的对其方式-给父元素添加justify-content属性" class="headerlink" title=" 调整主轴上的对其方式 给父元素添加justify-content属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整主轴上的对其方式 给父元素添加<code>justify-content</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* justify-content</span></span><br><span class="line"><span class="comment">        1) flex-start：默认值，左对齐</span></span><br><span class="line"><span class="comment">        2) flex-end：右对齐</span></span><br><span class="line"><span class="comment">        3) center：居中对齐</span></span><br><span class="line"><span class="comment">        4) space-between：两端对齐</span></span><br><span class="line"><span class="comment">        5) space-around：每个项目两侧的间距相等</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整侧轴上的对其方式-给父元素添加align-items属性"><a href="#调整侧轴上的对其方式-给父元素添加align-items属性" class="headerlink" title=" 调整侧轴上的对其方式 给父元素添加align-items属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整侧轴上的对其方式 给父元素添加<code>align-items</code>属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* align-items</span></span><br><span class="line"><span class="comment">        1) flex-start:交叉轴的起点对齐</span></span><br><span class="line"><span class="comment">        2) flex-end 交叉轴的终点对齐</span></span><br><span class="line"><span class="comment">        3) center 交叉轴居中对齐</span></span><br><span class="line"><span class="comment">        4) baseline 项目的第一行文字的基线对齐 没有高度的话 则高度占所有高度</span></span><br><span class="line"><span class="comment">        5) stretch：默认值：和flex-start效果一致 实际开发中不用</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">align-items</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="折行属性-flex-wrap"><a href="#折行属性-flex-wrap" class="headerlink" title=" 折行属性 flex-wrap"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 折行属性 <code>flex-wrap</code></h3><p>默认触发弹性盒子之后,子元素过多,子元素永远美元折行,会产生挤压效果,把原有的宽度挤没了,折行之后,会产生行间距问题,默认是均分</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="comment">/* flex-wrap:</span></span><br><span class="line"><span class="comment">        1) nowrap：表示不换行</span></span><br><span class="line"><span class="comment">        2) wrap：正常换行</span></span><br><span class="line"><span class="comment">        3) wrap-reverse：向上换行，第一行位于下方</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">flex-wrap</span>:nowrap;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调整行间距-给父元素添加align-content属性"><a href="#调整行间距-给父元素添加align-content属性" class="headerlink" title=" 调整行间距 给父元素添加align-content属性"></a><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-biaoqianA01_biji-94"></use></svg> 调整行间距 给父元素添加<code>align-content</code>属性</h3><emp>只有折行之后才会产生这个效果</emp><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.contanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:nowrap;</span><br><span class="line">    <span class="comment">/* align-content</span></span><br><span class="line"><span class="comment">        1) flex-start 侧周的开始位置(都没有行间距了)(*)</span></span><br><span class="line"><span class="comment">        2) flex-end 侧周的结束位置(都没有行间距了)</span></span><br><span class="line"><span class="comment">        3) center 侧周的居中位置</span></span><br><span class="line"><span class="comment">        4) space-between 侧周两端对其(贴边显示)</span></span><br><span class="line"><span class="comment">        5) space-around 侧周两端环绕(行与行之间的间距是贴边行到父元素之间的2倍) </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attribute">align-content</span>:center;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在开发中-我们还有两项会用的属性-开发属性"><a href="#在开发中-我们还有两项会用的属性-开发属性" class="headerlink" title=" 在开发中,我们还有两项会用的属性(开发属性)"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 在开发中,我们还有两项会用的属性(开发属性)</h2><h2 id="总结"><a href="#总结" class="headerlink" title=" 总结"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-A2"></use></svg> 总结</h2><ul><li>优点在于其容易上手，根据flex规则很容易达到某个布局效果。</li><li>弹性布局在网页中实现快速分配比例，盒子快速对齐优势很大，因为通过简单的几个属性就可以实现，进而减少我们设置具体值。但是弹性布局中的属性对于浏览器版本要求比较严格，如果浏览器版本太低那么弹性布局中的属性是无法正常使用的。</li><li>缺点是浏览器兼容性比较差，只能兼容到ie9及以上。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新/维护博客基本语法与插件</title>
      <link href="/2022/10/10/test%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/10/10/test%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>这是一篇关于博客的文章</span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg>前言</h3><p>很久之前便想很有一个自己的网站来写博客,记录自己的生活和学习,我曾自己试着敲代码做设计,但中途中总是在设计中犯难,觉得设计得不够美观，优雅。一遍一遍的推翻重做，一遍又一遍的找素材，哪方便都想做好，但又哪边便都没做好。终于困了倦了，慢慢失去了耐心。看着自己写了几个页面的blog，好看又好气，心中实在不忍放弃，便在网上不断寻找做网站博客的方法，再一次偶然都浏览途中，发现了别人写的网站，通过看别人的个人网站，了解了可以用<a href="https://hexo.io/">hexo</a>、<a href="https://jekyllrb.com/">jekyll</a>、<a href="https://www.gohugo.org/">hugo</a>、<a href="https://vuepress.vuejs.org/">vuepress</a>、<a href="https://solo.b3log.org/">solo</a>、<a href="https://wordpress.org/">wordpress</a>等技术框架。在经几次了解之后，便有此博客的由来。</p><h3 id="说明"><a href="#说明" class="headerlink" title=" 说明"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg> 说明</h3><p>我自己是使用的是hexo框架搭建的静态博客，目前正在努力完善和更新中，很多地方不是很完美，且我个人审美比较喜欢简洁干净，还是以学习为主，不会做过多美化与魔改( <del>emmm，我比较懒，只要能够达到自己想要的页面效果就行</del>) 如有不足的地方，也请大家多多指正！</p><h3 id="目的"><a href="#目的" class="headerlink" title=" 目的"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg> 目的</h3><p>我在更新跟新博客中，在使用方便不是很娴熟，视频、图片、一些特殊央视都不能直接书写数来，需要依靠各种网站查找。因此，这里整理了我在更新博客中常用的网站和一些式样，如果有对博客感兴趣的小伙伴，也希望帮助到大家！</p><h3 id="我在搭建-过程中，我会用到的网站"><a href="#我在搭建-过程中，我会用到的网站" class="headerlink" title=" 我在搭建  过程中，我会用到的网站"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg> 我在搭建 <span class='p red'>blog</span> 过程中，我会用到的网站</h3><h4 id="Butterfly官网"><a href="#Butterfly官网" class="headerlink" title="Butterfly官网"></a><a href="https://butterfly.js.org/">Butterfly</a>官网</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/css_img/Butterfly官网.png" alt=" Butterfly 官网首页" style="width:100%;"/></div><span class="image-caption"> Butterfly 官网首页</span></div><p>这个网站非常符合小白新手，他从一步一步教你如何搭建hexo博客并且上传到<a href="https://github.com/">github</a>,里面如何配置也非常详细。如果你一步一步的跟着文档走，搭建一个博客不也需要多少时间。当然，搭建博客肯定是会遇到问题的，这就非常考验我们耐心，<a href="www。baidu.com">百度</a>就成了我们开发必不可少的一项工具</p><h4 id="安知鱼个人博客"><a href="#安知鱼个人博客" class="headerlink" title="安知鱼个人博客"></a><a href="https://anzhiy.cn/">安知鱼</a>个人博客</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/css_img/安知鱼.png" alt=" 安知鱼 网站首页" style="width:100%;"/></div><span class="image-caption"> 安知鱼 网站首页</span></div><p>不得不说，我入门的时候，<a href="https://anzhiy.cn/">安知鱼</a>给我了很多帮助。于我而言,如果说<a href="https://butterfly.js.org/">Butterfly</a>是类似于<code>html</code>，那么<a href="https://anzhiy.cn/">安知鱼</a>无异于<code>css</code>。另外，这位博主还在<a href="www.bilibili.com">bilibili</a>开通了账号，专门出了<a href="https://hexo.io/zh-cn/">hexo</a>系列的视频，实在是萌新必备</p><h4 id="Akilarの糖果屋个人博客"><a href="#Akilarの糖果屋个人博客" class="headerlink" title="Akilarの糖果屋个人博客"></a><a href="https://akilar.top/">Akilarの糖果屋</a>个人博客</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/css_img/Akilarの糖果屋.png" alt=" Akilarの糖果屋 首页" style="width:100%;"/></div><span class="image-caption"> Akilarの糖果屋 首页</span></div><p>对于美化美化魔改之类的，hexo被<a href="https://akilar.top/">Akilarの糖果屋</a>玩的明明白白，可谓是玩到了极致。<a href="https://anzhiy.cn/">安知鱼</a>也在博客和哔哩哔哩说了参考是引荐Akilarの糖果屋的，可见这位老兄实力非凡。我有时也会去<a href="https://akilar.top/">Akilarの糖果屋</a>找点能够用得到的进行美化博客</p><h4 id="鸟不拉诗个人博客"><a href="#鸟不拉诗个人博客" class="headerlink" title="鸟不拉诗个人博客"></a><a href="https://niaobulashi.com//">鸟不拉诗</a>个人博客</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/css_img/鸟不拉屎.png" alt=" 鸟不拉诗首页" style="width:100%;"/></div><span class="image-caption"> 鸟不拉诗首页</span></div><p>此博客是我在找标签外挂时发现的，我目前也仅用于<a href="https://niaobulashi.com/2021/05/17/2021-05-17-butterfly-tag-plugins-plus/#%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87-icon">外挂标签</a>,</p><h3 id="bilibili视频适配"><a href="#bilibili视频适配" class="headerlink" title=" bilibili视频适配"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg> bilibili视频适配</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;iframe style=&quot;</span></span><br><span class="line"><span class="code">        position: absolute; </span></span><br><span class="line"><span class="code">        width: 100%; </span></span><br><span class="line"><span class="code">        height: 100%; </span></span><br><span class="line"><span class="code">        left: 0; top: 0;&quot; </span></span><br><span class="line"><span class="code">        &lt;!--视频路径 --&gt;</span></span><br><span class="line"><span class="code">        src=&quot;//player.bilibili.com/player.html?aid=644816088&amp;bvid=BV1vY4y1F79J&amp;cid=814027707&amp;page=1&quot;</span></span><br><span class="line"><span class="code">        scrolling=&quot;no&quot; </span></span><br><span class="line"><span class="code">        border=&quot;0&quot; </span></span><br><span class="line"><span class="code">        frameborder=&quot;no&quot; </span></span><br><span class="line"><span class="code">        framespacing=&quot;0&quot; </span></span><br><span class="line"><span class="code">        allowfullscreen=&quot;true&quot;&gt;</span></span><br><span class="line"><span class="code">    &lt;/iframe&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外挂标签引用视频"><a href="#外挂标签引用视频" class="headerlink" title=" 外挂标签引用视频"></a><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-B4"></use></svg> 外挂标签引用视频</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br></pre></td></tr></table></figure><h4 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h4><div class="video"><video controls preload><source src='https://6d79-myhexobolg-8gbn2hoqee25f301-1314245027.tcb.qcloud.la/%E5%8E%9F%E7%A5%9E%E7%94%9F%E6%97%A5%E4%BC%9A.mp4?sign=7b824b0f4a072fd2e57485ae9e535545&t=1665480601' type='video/mp4'>Your browser does not support the video tag.</video></div><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol><li>视频在博客中是比较男处理的，如果你用本地路径，会太卡</li><li>我们通常在网页中打开的视频，往往不是视频本身，而是一个视频网页</li><li><p>使用视频的方式</p><ul><li>路径为 <code>www.xxx.xxx.mp4</code></li><li>通过特殊方式进行解析</li><li>云存储</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
